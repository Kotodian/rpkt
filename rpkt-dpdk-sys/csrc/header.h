// Add dpdk headers.
#define _GNU_SOURCE
#include <rte_eal.h>
#include <rte_ring.h>
#include <rte_ethdev.h>
#include <rte_distributor.h>

// Add wrapper definitions for functions that bindgen can not generate.
//
// For instance, static inline functions defined in c headers can not be
// generated by bindgen.
// 
// To generate bindings for static inline function, add a wrapper definition like:
//
// void wrapper_static_inline_function(void);
//
// Then, in the impl.c, implement the wrapper function with:
//
// void wrapper_static_inline_function(void) {
//    static_inline_function();
// }

unsigned rte_lcore_id_();

int rte_mempool_full_(const struct rte_mempool *mp);

struct rte_mbuf *rte_pktmbuf_alloc_(struct rte_mempool *mp);

int rte_pktmbuf_alloc_bulk_(struct rte_mempool *pool,
							struct rte_mbuf **mbufs, unsigned count);

void rte_pktmbuf_free_(struct rte_mbuf *m);

uint16_t rte_eth_rx_burst_(uint16_t port_id, uint16_t queue_id,
						   struct rte_mbuf **rx_pkts, const uint16_t nb_pkts);

uint16_t rte_eth_tx_burst_(uint16_t port_id, uint16_t queue_id,
						   struct rte_mbuf **tx_pkts, uint16_t nb_pkts);

int rte_errno_();

// ring
unsigned int
rte_ring_enqueue_burst_(struct rte_ring *r, void * const *obj_table,
		      unsigned int n, unsigned int *free_space);

unsigned int
rte_ring_dequeue_burst_(struct rte_ring *r, void **obj_table,
		unsigned int n, unsigned int *available);

